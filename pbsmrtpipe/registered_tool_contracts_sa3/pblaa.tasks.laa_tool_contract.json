{
    "driver": {
        "env": {},
        "exe": "laa --resolved-tool-contract",
        "serialization": "json"
    },
    "tool_contract": {
        "_comment": "Created by v0.0.1",
        "description": "A tool to deconvolute mixtures of alleles and loci into phased consensus sequences. \nCopyright (c) 2014-2016 Pacific Biosciences, Inc.\nLicense: 3-BSD",
        "input_types": [
            {
                "description": "Subread DataSet or .bam file",
                "file_type_id": "PacBio.DataSet.SubreadSet",
                "id": "subread_set",
                "title": "SubreadSet"
            }
        ],
        "is_distributed": true,
        "name": "laa",
        "nproc": 8,
        "output_types": [
            {
                "default_name": "amplicon_analysis",
                "description": "Resulting consensus fastq file",
                "file_type_id": "PacBio.FileTypes.Fastq",
                "id": "result_fastq",
                "title": "Consensus FASTQ"
            },
            {
                "default_name": "amplicon_analysis_chimeras_noise",
                "description": "Resulting chimera/noise fastq file",
                "file_type_id": "PacBio.FileTypes.Fastq",
                "id": "junk_fastq",
                "title": "Chimera/noise FASTQ"
            },
            {
                "default_name": "amplicon_analysis_summary",
                "description": "Metadata for all resulting fastq sequences",
                "file_type_id": "PacBio.FileTypes.csv",
                "id": "summary_csv",
                "title": "Consensus summary CSV"
            },
            {
                "default_name": "amplicon_analysis_input",
                "description": "Per-barcode PCR quality estimates",
                "file_type_id": "PacBio.FileTypes.csv",
                "id": "input_csv",
                "title": "Input molecule report CSV"
            }
        ],
        "resource_types": [],
        "schema_options": [
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 1,
                    "description": "Minimum score to consider a sequence chimeric.",
                    "name": "chimeraScoreThreshold",
                    "option_id": "laa.task_options.chimeraScoreThreshold",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.chimeraScoreThreshold": {
                        "default": 1,
                        "description": "Minimum score to consider a sequence chimeric.",
                        "title": "chimeraScoreThreshold",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.chimeraScoreThreshold"
                ],
                "title": "JSON Schema for laa.task_options.chimeraScoreThreshold",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 2,
                    "description": "Markov Clustering inflation parameter.",
                    "name": "clusterInflation",
                    "option_id": "laa.task_options.clusterInflation",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.clusterInflation": {
                        "default": 2,
                        "description": "Markov Clustering inflation parameter.",
                        "title": "clusterInflation",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.clusterInflation"
                ],
                "title": "JSON Schema for laa.task_options.clusterInflation",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0.00100000004749745,
                    "description": "Markov Clustering loop weight parameter.",
                    "name": "clusterLoopWeight",
                    "option_id": "laa.task_options.clusterLoopWeight",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.clusterLoopWeight": {
                        "default": 0.00100000004749745,
                        "description": "Markov Clustering loop weight parameter.",
                        "title": "clusterLoopWeight",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.clusterLoopWeight"
                ],
                "title": "JSON Schema for laa.task_options.clusterLoopWeight",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": "",
                    "description": "Comma-separated list of barcode-index pairs to analyze, in the form '0--0'.",
                    "name": "Barcode-Index Pairs",
                    "option_id": "laa.task_options.doBc",
                    "type": "string"
                },
                "properties": {
                    "laa.task_options.doBc": {
                        "default": "",
                        "description": "Comma-separated list of barcode-index pairs to analyze, in the form '0--0'.",
                        "title": "Barcode-Index Pairs",
                        "type": "string"
                    }
                },
                "required": [
                    "laa.task_options.doBc"
                ],
                "title": "JSON Schema for laa.task_options.doBc",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": -1,
                    "description": "Only analyze one specified",
                    "name": "doCluster",
                    "option_id": "laa.task_options.doCluster",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.doCluster": {
                        "default": -1,
                        "description": "Only analyze one specified",
                        "title": "doCluster",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.doCluster"
                ],
                "title": "JSON Schema for laa.task_options.doCluster",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": true,
                    "description": "Write consensus sequences for each barcode out to separate files",
                    "name": "fastxByBarcode",
                    "option_id": "laa.task_options.fastxByBarcode",
                    "type": "boolean"
                },
                "properties": {
                    "laa.task_options.fastxByBarcode": {
                        "default": true,
                        "description": "Write consensus sequences for each barcode out to separate files",
                        "title": "fastxByBarcode",
                        "type": "boolean"
                    }
                },
                "required": [
                    "laa.task_options.fastxByBarcode"
                ],
                "title": "JSON Schema for laa.task_options.fastxByBarcode",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": false,
                    "description": "Filter input reads by presence of both flanking barcodes.",
                    "name": "Only Full Length Subreads",
                    "option_id": "laa.task_options.fullLength",
                    "type": "boolean"
                },
                "properties": {
                    "laa.task_options.fullLength": {
                        "default": false,
                        "description": "Filter input reads by presence of both flanking barcodes.",
                        "title": "Only Full Length Subreads",
                        "type": "boolean"
                    }
                },
                "required": [
                    "laa.task_options.fullLength"
                ],
                "title": "JSON Schema for laa.task_options.fullLength",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": false,
                    "description": "Only use full-length subreads when clustering",
                    "name": "fullLengthClustering",
                    "option_id": "laa.task_options.fullLengthClustering",
                    "type": "boolean"
                },
                "properties": {
                    "laa.task_options.fullLengthClustering": {
                        "default": false,
                        "description": "Only use full-length subreads when clustering",
                        "title": "fullLengthClustering",
                        "type": "boolean"
                    }
                },
                "required": [
                    "laa.task_options.fullLengthClustering"
                ],
                "title": "JSON Schema for laa.task_options.fullLengthClustering",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": false,
                    "description": "Generate PacBio indicies (*.pbi) for BAM files that don't have them.",
                    "name": "Generate PBI",
                    "option_id": "laa.task_options.generateBamIndex",
                    "type": "boolean"
                },
                "properties": {
                    "laa.task_options.generateBamIndex": {
                        "default": false,
                        "description": "Generate PacBio indicies (*.pbi) for BAM files that don't have them.",
                        "title": "Generate PBI",
                        "type": "boolean"
                    }
                },
                "required": [
                    "laa.task_options.generateBamIndex"
                ],
                "title": "JSON Schema for laa.task_options.generateBamIndex",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": false,
                    "description": "Ignore PacBio indicies (*.pbi) for BAM files if they exist.",
                    "name": "Ignore PBI",
                    "option_id": "laa.task_options.ignoreBamIndex",
                    "type": "boolean"
                },
                "properties": {
                    "laa.task_options.ignoreBamIndex": {
                        "default": false,
                        "description": "Ignore PacBio indicies (*.pbi) for BAM files if they exist.",
                        "title": "Ignore PBI",
                        "type": "boolean"
                    }
                },
                "required": [
                    "laa.task_options.ignoreBamIndex"
                ],
                "title": "JSON Schema for laa.task_options.ignoreBamIndex",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": false,
                    "description": "Disable barcode filtering and treat all data as one sample.",
                    "name": "Disable Barcode Filtering",
                    "option_id": "laa.task_options.ignoreBc",
                    "type": "boolean"
                },
                "properties": {
                    "laa.task_options.ignoreBc": {
                        "default": false,
                        "description": "Disable barcode filtering and treat all data as one sample.",
                        "title": "Disable Barcode Filtering",
                        "type": "boolean"
                    }
                },
                "required": [
                    "laa.task_options.ignoreBc"
                ],
                "title": "JSON Schema for laa.task_options.ignoreBc",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0,
                    "description": "When splitting, ignore N bases at the ends. Use to prevent excessive splitting caused by degenerate primers.",
                    "name": "ignoreEnds",
                    "option_id": "laa.task_options.ignoreEnds",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.ignoreEnds": {
                        "default": 0,
                        "description": "When splitting, ignore N bases at the ends. Use to prevent excessive splitting caused by degenerate primers.",
                        "title": "ignoreEnds",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.ignoreEnds"
                ],
                "title": "JSON Schema for laa.task_options.ignoreEnds",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": "amplicon_analysis_input.csv",
                    "description": "Output estimates of input PCR quality based on subread mappings",
                    "name": "Input Molecule Report File",
                    "option_id": "laa.task_options.inputReportFile",
                    "type": "string"
                },
                "properties": {
                    "laa.task_options.inputReportFile": {
                        "default": "amplicon_analysis_input.csv",
                        "description": "Output estimates of input PCR quality based on subread mappings",
                        "title": "Input Molecule Report File",
                        "type": "string"
                    }
                },
                "required": [
                    "laa.task_options.inputReportFile"
                ],
                "title": "JSON Schema for laa.task_options.inputReportFile",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": "amplicon_analysis_chimeras_noise.fastq",
                    "description": "Output file for low-quality or chimeric results.",
                    "name": "Junk File",
                    "option_id": "laa.task_options.junkFile",
                    "type": "string"
                },
                "properties": {
                    "laa.task_options.junkFile": {
                        "default": "amplicon_analysis_chimeras_noise.fastq",
                        "description": "Output file for low-quality or chimeric results.",
                        "title": "Junk File",
                        "type": "string"
                    }
                },
                "required": [
                    "laa.task_options.junkFile"
                ],
                "title": "JSON Schema for laa.task_options.junkFile",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": "",
                    "description": "Output file to write logging information to",
                    "name": "LOG file",
                    "option_id": "laa.task_options.logFile",
                    "type": "string"
                },
                "properties": {
                    "laa.task_options.logFile": {
                        "default": "",
                        "description": "Output file to write logging information to",
                        "title": "LOG file",
                        "type": "string"
                    }
                },
                "required": [
                    "laa.task_options.logFile"
                ],
                "title": "JSON Schema for laa.task_options.logFile",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 500,
                    "description": "Maximum number of input reads to cluster per barcode.",
                    "name": "maxClusteringReads",
                    "option_id": "laa.task_options.maxClusteringReads",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.maxClusteringReads": {
                        "default": 500,
                        "description": "Maximum number of input reads to cluster per barcode.",
                        "title": "maxClusteringReads",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.maxClusteringReads"
                ],
                "title": "JSON Schema for laa.task_options.maxClusteringReads",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0,
                    "description": "Maximum length of input reads, set 0 to disable.",
                    "name": "maxLength",
                    "option_id": "laa.task_options.maxLength",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.maxLength": {
                        "default": 0,
                        "description": "Maximum length of input reads, set 0 to disable.",
                        "title": "maxLength",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.maxLength"
                ],
                "title": "JSON Schema for laa.task_options.maxLength",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 500,
                    "description": "Maximum number of reads to use for phasing/consensus.",
                    "name": "maxPhasingReads",
                    "option_id": "laa.task_options.maxPhasingReads",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.maxPhasingReads": {
                        "default": 500,
                        "description": "Maximum number of reads to use for phasing/consensus.",
                        "title": "maxPhasingReads",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.maxPhasingReads"
                ],
                "title": "JSON Schema for laa.task_options.maxPhasingReads",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 2000,
                    "description": "Maximum number of input reads to cluster per barcode.",
                    "name": "maxReads",
                    "option_id": "laa.task_options.maxReads",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.maxReads": {
                        "default": 2000,
                        "description": "Maximum number of input reads to cluster per barcode.",
                        "title": "maxReads",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.maxReads"
                ],
                "title": "JSON Schema for laa.task_options.maxReads",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0,
                    "description": "Minimum average barcode score to require of subreads.",
                    "name": "Minimum Average Barcode Score",
                    "option_id": "laa.task_options.minBarcodeScore",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.minBarcodeScore": {
                        "default": 0,
                        "description": "Minimum average barcode score to require of subreads.",
                        "title": "Minimum Average Barcode Score",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.minBarcodeScore"
                ],
                "title": "JSON Schema for laa.task_options.minBarcodeScore",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 20,
                    "description": "Minimum number reads supporting a cluster before it is reported.",
                    "name": "minClusterSize",
                    "option_id": "laa.task_options.minClusterSize",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.minClusterSize": {
                        "default": 20,
                        "description": "Minimum number reads supporting a cluster before it is reported.",
                        "title": "minClusterSize",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.minClusterSize"
                ],
                "title": "JSON Schema for laa.task_options.minClusterSize",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 3000,
                    "description": "Minimum length of input reads.",
                    "name": "minLength",
                    "option_id": "laa.task_options.minLength",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.minLength": {
                        "default": 3000,
                        "description": "Minimum length of input reads.",
                        "title": "minLength",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.minLength"
                ],
                "title": "JSON Schema for laa.task_options.minLength",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0.949999988079071,
                    "description": "Minimum predicted consensus accuracy below which a consensus is called 'noise'.",
                    "name": "minPredictedAccuracy",
                    "option_id": "laa.task_options.minPredictedAccuracy",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.minPredictedAccuracy": {
                        "default": 0.949999988079071,
                        "description": "Minimum predicted consensus accuracy below which a consensus is called 'noise'.",
                        "title": "minPredictedAccuracy",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.minPredictedAccuracy"
                ],
                "title": "JSON Schema for laa.task_options.minPredictedAccuracy",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0.0900000035762787,
                    "description": "Minimum prevalence to require of mutations used for phasing.",
                    "name": "minPrevalence",
                    "option_id": "laa.task_options.minPrevalence",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.minPrevalence": {
                        "default": 0.0900000035762787,
                        "description": "Minimum prevalence to require of mutations used for phasing.",
                        "title": "minPrevalence",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.minPrevalence"
                ],
                "title": "JSON Schema for laa.task_options.minPrevalence",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 20,
                    "description": "Minimum score to require of mutations  used for phasing.",
                    "name": "minQScore",
                    "option_id": "laa.task_options.minQScore",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.minQScore": {
                        "default": 20,
                        "description": "Minimum score to require of mutations  used for phasing.",
                        "title": "minQScore",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.minQScore"
                ],
                "title": "JSON Schema for laa.task_options.minQScore",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0.75,
                    "description": "Minimum read score of input reads.",
                    "name": "minReadScore",
                    "option_id": "laa.task_options.minReadScore",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.minReadScore": {
                        "default": 0.75,
                        "description": "Minimum read score of input reads.",
                        "title": "minReadScore",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.minReadScore"
                ],
                "title": "JSON Schema for laa.task_options.minReadScore",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 3.75,
                    "description": "Minimum SNR of input reads.",
                    "name": "minSnr",
                    "option_id": "laa.task_options.minSnr",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.minSnr": {
                        "default": 3.75,
                        "description": "Minimum SNR of input reads.",
                        "title": "minSnr",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.minSnr"
                ],
                "title": "JSON Schema for laa.task_options.minSnr",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0.100000001490116,
                    "description": "Minimum fraction of reads favoring the minor phase required to split a haplotype.",
                    "name": "minSplitFraction",
                    "option_id": "laa.task_options.minSplitFraction",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.minSplitFraction": {
                        "default": 0.100000001490116,
                        "description": "Minimum fraction of reads favoring the minor phase required to split a haplotype.",
                        "title": "minSplitFraction",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.minSplitFraction"
                ],
                "title": "JSON Schema for laa.task_options.minSplitFraction",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 20,
                    "description": "Minimum number reads favoring the minor phase required to split a haplotype.",
                    "name": "minSplitReads",
                    "option_id": "laa.task_options.minSplitReads",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.minSplitReads": {
                        "default": 20,
                        "description": "Minimum number reads favoring the minor phase required to split a haplotype.",
                        "title": "minSplitReads",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.minSplitReads"
                ],
                "title": "JSON Schema for laa.task_options.minSplitReads",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 500,
                    "description": "Global likelihood improvement required to split a haplotype.",
                    "name": "minSplitScore",
                    "option_id": "laa.task_options.minSplitScore",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.minSplitScore": {
                        "default": 500,
                        "description": "Global likelihood improvement required to split a haplotype.",
                        "title": "minSplitScore",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.minSplitScore"
                ],
                "title": "JSON Schema for laa.task_options.minSplitScore",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": -10,
                    "description": "Minimum ZScore to allow before adding a read to a haplotype.",
                    "name": "minZScore",
                    "option_id": "laa.task_options.minZScore",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.minZScore": {
                        "default": -10,
                        "description": "Minimum ZScore to allow before adding a read to a haplotype.",
                        "title": "minZScore",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.minZScore"
                ],
                "title": "JSON Schema for laa.task_options.minZScore",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": "",
                    "description": "Path to a model file or directory containing model files.",
                    "name": "Model(s) Path",
                    "option_id": "laa.task_options.model_path",
                    "type": "string"
                },
                "properties": {
                    "laa.task_options.model_path": {
                        "default": "",
                        "description": "Path to a model file or directory containing model files.",
                        "title": "Model(s) Path",
                        "type": "string"
                    }
                },
                "required": [
                    "laa.task_options.model_path"
                ],
                "title": "JSON Schema for laa.task_options.model_path",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": "",
                    "description": "Name of chemistry or model to use, overriding default selection.",
                    "name": "Model Override",
                    "option_id": "laa.task_options.model_spec",
                    "type": "string"
                },
                "properties": {
                    "laa.task_options.model_spec": {
                        "default": "",
                        "description": "Name of chemistry or model to use, overriding default selection.",
                        "title": "Model Override",
                        "type": "string"
                    }
                },
                "required": [
                    "laa.task_options.model_spec"
                ],
                "title": "JSON Schema for laa.task_options.model_spec",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": false,
                    "description": "Deactivate the chimera filter and output all consensus",
                    "name": "noChimeraFilter",
                    "option_id": "laa.task_options.noChimeraFilter",
                    "type": "boolean"
                },
                "properties": {
                    "laa.task_options.noChimeraFilter": {
                        "default": false,
                        "description": "Deactivate the chimera filter and output all consensus",
                        "title": "noChimeraFilter",
                        "type": "boolean"
                    }
                },
                "required": [
                    "laa.task_options.noChimeraFilter"
                ],
                "title": "JSON Schema for laa.task_options.noChimeraFilter",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": false,
                    "description": "Disable the coarse clustering",
                    "name": "noClustering",
                    "option_id": "laa.task_options.noClustering",
                    "type": "boolean"
                },
                "properties": {
                    "laa.task_options.noClustering": {
                        "default": false,
                        "description": "Disable the coarse clustering",
                        "title": "noClustering",
                        "type": "boolean"
                    }
                },
                "required": [
                    "laa.task_options.noClustering"
                ],
                "title": "JSON Schema for laa.task_options.noClustering",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": false,
                    "description": "Don't prefer full-length subreads when clustering",
                    "name": "noFullLengthPreference",
                    "option_id": "laa.task_options.noFullLengthPreference",
                    "type": "boolean"
                },
                "properties": {
                    "laa.task_options.noFullLengthPreference": {
                        "default": false,
                        "description": "Don't prefer full-length subreads when clustering",
                        "title": "noFullLengthPreference",
                        "type": "boolean"
                    }
                },
                "required": [
                    "laa.task_options.noFullLengthPreference"
                ],
                "title": "JSON Schema for laa.task_options.noFullLengthPreference",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": false,
                    "description": "Disable the fine phasing step.",
                    "name": "noPhasing",
                    "option_id": "laa.task_options.noPhasing",
                    "type": "boolean"
                },
                "properties": {
                    "laa.task_options.noPhasing": {
                        "default": false,
                        "description": "Disable the fine phasing step.",
                        "title": "noPhasing",
                        "type": "boolean"
                    }
                },
                "required": [
                    "laa.task_options.noPhasing"
                ],
                "title": "JSON Schema for laa.task_options.noPhasing",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": "amplicon_analysis_summary.csv",
                    "description": "Output file for summary report.",
                    "name": "Report File",
                    "option_id": "laa.task_options.reportFile",
                    "type": "string"
                },
                "properties": {
                    "laa.task_options.reportFile": {
                        "default": "amplicon_analysis_summary.csv",
                        "description": "Output file for summary report.",
                        "title": "Report File",
                        "type": "string"
                    }
                },
                "required": [
                    "laa.task_options.reportFile"
                ],
                "title": "JSON Schema for laa.task_options.reportFile",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": "amplicon_analysis.fastq",
                    "description": "Output file for high-quality results.",
                    "name": "resultFile",
                    "option_id": "laa.task_options.resultFile",
                    "type": "string"
                },
                "properties": {
                    "laa.task_options.resultFile": {
                        "default": "amplicon_analysis.fastq",
                        "description": "Output file for high-quality results.",
                        "title": "resultFile",
                        "type": "string"
                    }
                },
                "required": [
                    "laa.task_options.resultFile"
                ],
                "title": "JSON Schema for laa.task_options.resultFile",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 42,
                    "description": "RNG seed, modulates reservoir filtering of reads.",
                    "name": "RNG seed",
                    "option_id": "laa.task_options.rngSeed",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.rngSeed": {
                        "default": 42,
                        "description": "RNG seed, modulates reservoir filtering of reads.",
                        "title": "RNG seed",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.rngSeed"
                ],
                "title": "JSON Schema for laa.task_options.rngSeed",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0.0,
                    "description": "Skip some high-scoring alignments to disperse the cluster more.",
                    "name": "skipRate",
                    "option_id": "laa.task_options.skipRate",
                    "type": "number"
                },
                "properties": {
                    "laa.task_options.skipRate": {
                        "default": 0.0,
                        "description": "Skip some high-scoring alignments to disperse the cluster more.",
                        "title": "skipRate",
                        "type": "number"
                    }
                },
                "required": [
                    "laa.task_options.skipRate"
                ],
                "title": "JSON Schema for laa.task_options.skipRate",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": "amplicon_analysis_subreads",
                    "description": "Output prefix for subreads report.",
                    "name": "Subreads Report Prefix",
                    "option_id": "laa.task_options.subreadsReportPrefix",
                    "type": "string"
                },
                "properties": {
                    "laa.task_options.subreadsReportPrefix": {
                        "default": "amplicon_analysis_subreads",
                        "description": "Output prefix for subreads report.",
                        "title": "Subreads Report Prefix",
                        "type": "string"
                    }
                },
                "required": [
                    "laa.task_options.subreadsReportPrefix"
                ],
                "title": "JSON Schema for laa.task_options.subreadsReportPrefix",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0,
                    "description": "Report only the top N consensus sequences for each barcode, set <1 to disable.",
                    "name": "takeN",
                    "option_id": "laa.task_options.takeN",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.takeN": {
                        "default": 0,
                        "description": "Report only the top N consensus sequences for each barcode, set <1 to disable.",
                        "title": "takeN",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.takeN"
                ],
                "title": "JSON Schema for laa.task_options.takeN",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": 0,
                    "description": "Trim N bases from each end of each consensus.",
                    "name": "trimEnds",
                    "option_id": "laa.task_options.trimEnds",
                    "type": "integer"
                },
                "properties": {
                    "laa.task_options.trimEnds": {
                        "default": 0,
                        "description": "Trim N bases from each end of each consensus.",
                        "title": "trimEnds",
                        "type": "integer"
                    }
                },
                "required": [
                    "laa.task_options.trimEnds"
                ],
                "title": "JSON Schema for laa.task_options.trimEnds",
                "type": "object"
            },
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "pb_option": {
                    "default": "None",
                    "description": "A file of ReadIds, as either Text or Fasta, to allow from the input file.",
                    "name": "whitelist",
                    "option_id": "laa.task_options.whitelist",
                    "type": "string"
                },
                "properties": {
                    "laa.task_options.whitelist": {
                        "default": "None",
                        "description": "A file of ReadIds, as either Text or Fasta, to allow from the input file.",
                        "title": "whitelist",
                        "type": "string"
                    }
                },
                "required": [
                    "laa.task_options.whitelist"
                ],
                "title": "JSON Schema for laa.task_options.whitelist",
                "type": "object"
            }
        ],
        "task_type": "pbsmrtpipe.task_types.standard",
        "tool_contract_id": "pblaa.tasks.laa"
    },
    "tool_contract_id": "pblaa.tasks.laa",
    "version": "pblaa 2.0.0 (commit 35d69e5*) | unanimity 2.0.4 (commit 91ad042*)"
}